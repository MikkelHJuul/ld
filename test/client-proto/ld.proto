syntax = "proto3";

option go_package = "github.com/MikkelHJuul/ld/test/client-proto";

package service;

service ld {
    //// read
    rpc Fetch(Key) returns (KeyValue);
    rpc FetchMany(stream Key) returns (stream KeyValue);
    rpc FetchRange(KeyRange) returns (stream KeyValue);

    //// Delete
    rpc Delete(Key) returns (KeyValue);
    rpc DeleteMany(stream Key) returns (stream KeyValue);
    rpc DeleteRange(KeyRange) returns (stream KeyValue);

    //// Create
    rpc Insert(KeyValue) returns (InsertResponse);
    rpc InsertMany(stream KeyValue) returns (stream InsertResponse);
}

message KeyRange {
    string pattern = 1;  // unix style POSIX regex or RE2 tbd https://github.com/google/re2/wiki/Syntax
    string from = 2;
    string to = 3;  // inclusive (required for discrete systems with discrete queries)
}

message InsertResponse {
    bool OK = 1;  // false implies ID-clash
}

message Key {
    string key = 1;  // [(validate.rules).string { pattern: "(?i)^[0-9a-zA-Z_-.~]+$", max_len: 64 }];  // https://tools.ietf.org/html/rfc3986//section-2.3
}

message KeyValue {
    Key key = 1;
    YourObject value = 2;
}

message YourObject {
     John john = 1;
     John johnsApprentice = 2;
}

message John {
    string name = 1;
    string occupation = 2;
}