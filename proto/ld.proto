syntax = "proto3";

option go_package = "github.com/MikkelHJuul/ld/service";

package service;

//the service `ld` is a database. As you can see it does one thing. CRUD!
service ld {
    rpc Create(KeyValue) returns (CreateResponse);
    rpc CreateMany(stream KeyValue) returns (stream CreateResponse);

    rpc Read(Key) returns (KeyValue);
    rpc ReadMany(stream Key) returns (stream KeyValue);
    rpc ReadRange(KeyRange) returns (stream KeyValue);

    rpc Update(KeyValue) returns (KeyValue);
    rpc UpdateMany(stream KeyValue) returns (stream KeyValue);

    rpc Delete(Key) returns (KeyValue);
    rpc DeleteMany(stream Key) returns (stream KeyValue);
    rpc DeleteRange(KeyRange) returns (stream KeyValue);
}

// A response, true for Errors
// empty response for no error
message CreateResponse {
    bool error = 1;
}

//The Key when querying directly for it
message Key {
    string key = 1;  // [(validate.rules).string { pattern: "(?i)^[0-9a-zA-Z_-.~]+$", max_len: 64 }];  // https://tools.ietf.org/html/rfc3986//section-2.3
}

//A key-range is the only possibility of querying the data outside of a direct Key.
message KeyRange {
    // unix style POSIX regex or RE2 tbd https://github.com/google/re2/wiki/Syntax
    string pattern = 1;

    // both inclusive
    // required for discrete systems with discrete queries
    //  -- since you cannot reference a value outside of the last/first,
    //     and would then not be able to query the last/first record.
    string from = 2;
    string to = 3;
}

message KeyValue {
    string key = 1;
    //You can easily replace this with google's Any if your want to
    //Or replace with your own Message type
    //
    //fx you have some software that simply expose data from a datasource
    //Your software exposes it as proto. This will be your database.
    //1. rewrite this .proto-file on the client side
    // add `import "your_messages_file.proto"`
    // replace the bytes of this with the type/format you wish to save
    // read https://developers.google.com/protocol-buffers/docs/encoding#strings
    // and https://developers.google.com/protocol-buffers/docs/encoding#embedded
    bytes value = 2;
}
